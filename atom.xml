<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>🅱️an</title>
  
  <subtitle>这是一个工作博客</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-07-09T03:04:31.420Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>班殿宏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WKWebView与js交互的注意事项</title>
    <link href="http://example.com/2021/07/09/WKWebView%E4%B8%8Ejs%E4%BA%A4%E4%BA%92%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://example.com/2021/07/09/WKWebView%E4%B8%8Ejs%E4%BA%A4%E4%BA%92%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2021-07-09T02:27:22.000Z</published>
    <updated>2021-07-09T03:04:31.420Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h5 id="WKWebView简单使用"><a href="#WKWebView简单使用" class="headerlink" title="WKWebView简单使用"></a>WKWebView简单使用</h5><p><a href="https://www.jianshu.com/p/5cf0d241ae12">例子</a></p></li></ul><ul><li><h5 id="JS调用原生"><a href="#JS调用原生" class="headerlink" title="JS调用原生"></a>JS调用原生</h5></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">window.webkit.messageHandlers.&lt;name&gt;.postMessage(&lt;messageBody&gt;)</span><br><span class="line">&#x2F;&#x2F;其中&lt;name&gt;，就是上面方法里的第二个参数&#96;name&#96;。</span><br><span class="line">&#x2F;&#x2F;例如我们调用API的时候第二个参数填@&quot;Share&quot;，那么在JS里就是:</span><br><span class="line">&#x2F;&#x2F;window.webkit.messageHandlers.Share.postMessage(&lt;messageBody&gt;)</span><br><span class="line">&#x2F;&#x2F;&lt;messageBody&gt;是一个键值对，键是body，值可以有多种类型的参数。</span><br><span class="line">&#x2F;&#x2F; 在&#96;WKScriptMessageHandler&#96;协议中，我们可以看到mssage是&#96;WKScriptMessage&#96;类型，有一个属性叫body。</span><br><span class="line">&#x2F;&#x2F; 而注释里写明了body 的类型：</span><br><span class="line">Allowed types are NSNumber, NSString, NSDate, NSArray, NSDictionary, and NSNull.</span><br></pre></td></tr></table></figure><p>！！！注意：<messageBody>不可以不传参，否则不会调用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传null</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scanClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.ScanAction.postMessage(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传字典              </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shareClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.Share.postMessage(&#123;<span class="attr">title</span>:<span class="string">&#x27;测试分享的标题&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;测试分享的内容&#x27;</span>,<span class="attr">url</span>:<span class="string">&#x27;http://www.baidu.com&#x27;</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">playSound</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.PlaySound.postMessage(<span class="string">&#x27;shake_sound_male.wav&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传数组</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">colorClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.webkit.messageHandlers.Color.postMessage([<span class="number">67</span>,<span class="number">205</span>,<span class="number">128</span>,<span class="number">0.5</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/u011619283/article/details/52135988">参考</a></p><ul><li><h4 id="原生调用JS"><a href="#原生调用JS" class="headerlink" title="原生调用JS"></a>原生调用JS</h4></li></ul><p>JS</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(name);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = name;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    Objective-C</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NSString *jsStr &#x3D; [NSString stringWithFormat:@&quot;test(&#39;%@&#39;)&quot;,@&quot;what the hell&quot;];[self.webView evaluateJavaScript:jsStr completionHandler:^(id _Nullable result, NSError * _Nullable error) &#123;</span><br><span class="line">     NSLog(@&quot;%@--%@&quot;,result,error);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><ul><li><h5 id="原生调用VUE"><a href="#原生调用VUE" class="headerlink" title="原生调用VUE"></a>原生调用VUE</h5><p>VUE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export default&#123;</span><br><span class="line">    ...</span><br><span class="line">    created()&#123;</span><br><span class="line">        window.nativeCallJS &#x3D; this.nativeCallJS</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        nativeCallJS:function(data)&#123;</span><br><span class="line">            return &quot;return data&quot; + data</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Objective-C</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.webkit.messageHandlers.jsCallNative.postMessage(params)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/Yao_MG/article/details/107237764">参考1</a> <a href="https://blog.csdn.net/lyyo_cd/article/details/84304864">参考2</a></p></li><li><h5 id="OC向JS传值"><a href="#OC向JS传值" class="headerlink" title="OC向JS传值"></a>OC向JS传值</h5><p>如果是单个值，可以如下：</p><p>如果是多个值，可以传json string。</p><p><a href="https://blog.csdn.net/zjpjay/article/details/103694844">参考</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;WKWebView简单使用&quot;&gt;&lt;a href=&quot;#WKWebView简单使用&quot; class=&quot;headerlink&quot; title=&quot;WKWebView简单使用&quot;&gt;&lt;/a&gt;WKWebView简单使用&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://</summary>
      
    
    
    
    
    <category term="WKWebView&amp;JS" scheme="http://example.com/tags/WKWebView-JS/"/>
    
  </entry>
  
  <entry>
    <title>一张图搞定ios framework重签</title>
    <link href="http://example.com/2021/06/08/%E4%B8%80%E5%BC%A0%E5%9B%BE%E6%90%9E%E5%AE%9Aios-framework%E9%87%8D%E7%AD%BE/"/>
    <id>http://example.com/2021/06/08/%E4%B8%80%E5%BC%A0%E5%9B%BE%E6%90%9E%E5%AE%9Aios-framework%E9%87%8D%E7%AD%BE/</id>
    <published>2021-06-08T05:33:29.000Z</published>
    <updated>2021-06-08T05:41:17.191Z</updated>
    
    <content type="html"><![CDATA[<p>重签常用命令</p><h5 id="1-查看framework的签名证书命令："><a href="#1-查看framework的签名证书命令：" class="headerlink" title="1.查看framework的签名证书命令："></a>1.查看framework的签名证书命令：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign -d -vv xxxxx.framework</span><br></pre></td></tr></table></figure><h5 id="2-删除原有的签名"><a href="#2-删除原有的签名" class="headerlink" title="2.删除原有的签名"></a>2.删除原有的签名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进入到XX.framwork文件夹内，删除_CodeSignature文件夹</span><br></pre></td></tr></table></figure><h5 id="3-查看本机可用的签名文件-命令："><a href="#3-查看本机可用的签名文件-命令：" class="headerlink" title="3.查看本机可用的签名文件,命令："></a>3.查看本机可用的签名文件,命令：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/security find-identity -v -p codesigning</span><br></pre></td></tr></table></figure><h5 id="4-使用签名文件签名命令："><a href="#4-使用签名文件签名命令：" class="headerlink" title="4.使用签名文件签名命令："></a>4.使用签名文件签名命令：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign -fs &quot;iPhone Developer: ... (...)&quot; xxxxx.framework</span><br></pre></td></tr></table></figure><p>完成</p><p><img src="https://s1.imagehub.cc/images/2021/06/08/iOS-framework25ceb1c3b98396b8.png" alt="iOS framework动态库重签名"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;重签常用命令&lt;/p&gt;
&lt;h5 id=&quot;1-查看framework的签名证书命令：&quot;&gt;&lt;a href=&quot;#1-查看framework的签名证书命令：&quot; class=&quot;headerlink&quot; title=&quot;1.查看framework的签名证书命令：&quot;&gt;&lt;/a&gt;1.查看frame</summary>
      
    
    
    
    
    <category term="重签" scheme="http://example.com/tags/%E9%87%8D%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Unable to interpret the specified path</title>
    <link href="http://example.com/2021/01/27/Unable-to-interpret-the-specified-path/"/>
    <id>http://example.com/2021/01/27/Unable-to-interpret-the-specified-path/</id>
    <published>2021-01-27T03:00:19.000Z</published>
    <updated>2021-01-27T03:01:28.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unable-to-interpret-the-specified-path"><a href="#Unable-to-interpret-the-specified-path" class="headerlink" title="Unable to interpret the specified path"></a>Unable to interpret the specified path</h1><p>解决：pod spec lint –verbose</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Unable-to-interpret-the-specified-path&quot;&gt;&lt;a href=&quot;#Unable-to-interpret-the-specified-path&quot; class=&quot;headerlink&quot; title=&quot;Unable to interp</summary>
      
    
    
    
    
    <category term="pods" scheme="http://example.com/tags/pods/"/>
    
  </entry>
  
  <entry>
    <title>Swift 学习笔记三</title>
    <link href="http://example.com/2021/01/14/Swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/"/>
    <id>http://example.com/2021/01/14/Swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/</id>
    <published>2021-01-14T14:46:52.000Z</published>
    <updated>2021-01-15T01:20:06.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcname</span><span class="params">(形参)</span></span> -&gt; returnType &#123;</span><br><span class="line">statement</span><br><span class="line"><span class="keyword">return</span> parameters</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcname</span><span class="params">()</span></span> -&gt; datatype &#123;</span><br><span class="line">   <span class="keyword">return</span> datatype</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>元祖</p><p>**元组(tuples)**把多个值组合成一个复合值。本质上是一组数据。</p></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> http404Error = (<span class="number">404</span>, <span class="string">&quot;Not Found&quot;</span>)</span><br><span class="line"><span class="comment">// http404Error 的类型是 (Int, String)，值是 (404, &quot;Not Found&quot;)</span></span><br><span class="line"><span class="comment">// 这个元组可以被描述为“一个类型为 (Int, String) *的元组”</span></span><br></pre></td></tr></table></figure><ul><li>元祖作为返回值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func funcname(形参) -&gt; (元祖) &#123;</span><br><span class="line">statement</span><br><span class="line">return </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>可变参数</p><blockquote><p>可变参数可以接受零个或多个值。函数调用时，你可以用可变参数来指定函数参数，其数量是不确定的。可变参数通过在变量类型名后面加入（…）的方式来定义。</p></blockquote></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">vari</span>&lt;N&gt;<span class="params">(members: N...)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> members &#123;</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>变量参数</p><p>一般默认在函数中定义的参数都是常量参数，也就是这个参数你只可以查询使用，不能改变它的值。</p><p>如果想要声明一个变量参数，可以在<code>参数定义前</code>加 <code>inout</code>关键字，这样就可以改变这个参数的值了。</p></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>  <span class="title">getName</span><span class="params">(<span class="keyword">_</span> name: <span class="keyword">inout</span> String)</span></span>.........</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swapTwoInts</span><span class="params">(<span class="keyword">_</span> a: <span class="keyword">inout</span> Int, <span class="keyword">_</span> b: <span class="keyword">inout</span> Int)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> temporaryA = a</span><br><span class="line">    a = b</span><br><span class="line">    b = temporaryA</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="number">5</span></span><br><span class="line">swapTwoInts(&amp;x, &amp;y)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    
    <category term="swift 学习笔记" scheme="http://example.com/tags/swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Swift 学习笔记二</title>
    <link href="http://example.com/2021/01/14/Swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/"/>
    <id>http://example.com/2021/01/14/Swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/</id>
    <published>2021-01-14T01:55:03.000Z</published>
    <updated>2021-01-14T03:10:37.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul><li>空数组</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someArray = [<span class="type">SomeType</span>]() <span class="comment">//空数组</span></span><br><span class="line">*<span class="keyword">var</span> names = [<span class="type">String</span>]()</span><br></pre></td></tr></table></figure><ul><li>初始化大小</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someArray = [<span class="type">SomeType</span>](repeating: <span class="type">InitialValue</span>, <span class="built_in">count</span>: <span class="type">NumbeOfElements</span>)</span><br><span class="line"><span class="keyword">var</span> someInts = [<span class="type">Int</span>](repeating: <span class="number">0</span>,<span class="built_in">count</span>: <span class="number">10</span>)</span><br><span class="line"><span class="keyword">var</span> someString = [<span class="type">String</span>](repeating: <span class="string">&quot;ban&quot;</span>,<span class="built_in">count</span>: <span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li><p>访问数组</p><p>索引。比如：someInts[0]</p></li><li><p>修改数组</p></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//append 或者 +=</span></span><br><span class="line">someInts.append(<span class="number">20</span>)</span><br><span class="line">someInts.append(<span class="number">30</span>)</span><br><span class="line">someInts += [<span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//索引修改</span></span><br><span class="line">someInts[<span class="number">2</span>] = <span class="number">50</span></span><br></pre></td></tr></table></figure><ul><li>遍历数组</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> someStrs &#123;</span><br><span class="line">   <span class="built_in">print</span>(item)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//同时需要每个数据项的值和索引值，可以使用 String 的 enumerate() 方法来进行数组遍历</span></span><br><span class="line"><span class="keyword">for</span> (index, item) <span class="keyword">in</span> someStrs.enumerated() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;在 index = \(index) 位置上的值为 \(item)&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>合并数组</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用加法操作符（+）来合并两种已存在的相同类型数组</span></span><br><span class="line"><span class="keyword">var</span> intsC = intsA + intsB</span><br></pre></td></tr></table></figure><ul><li>count属性</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> intsA = [<span class="type">Int</span>](<span class="built_in">count</span>:<span class="number">2</span>, repeatedValue: <span class="number">2</span>)</span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;\(intsA.count)&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>isEmpty属性</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SomeInts</span>.isEmpty</span><br></pre></td></tr></table></figure></li></ul><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><ul><li>空字典</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someDict =  [<span class="type">KeyType</span>: <span class="type">ValueType</span>]()</span><br><span class="line"><span class="keyword">var</span> someDict = [<span class="type">String</span>: <span class="type">String</span>]()</span><br><span class="line"><span class="keyword">var</span> someDict:[<span class="type">String</span>: <span class="type">String</span>] = [<span class="string">&quot;name&quot;</span>: <span class="string">&quot;ban&quot;</span>,<span class="string">&quot;sex&quot;</span>: <span class="string">&quot;m&quot;</span>]</span><br></pre></td></tr></table></figure><ul><li>修改字典</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用 updateValue(forKey:) 增加或更新字典的内容。如果 key 不存在，则添加值，如果存在则修改 key 对应的值</span></span><br><span class="line"><span class="keyword">var</span> oldVal = someDict.updateValue(<span class="string">&quot;bandianhong&quot;</span>, forKey: <span class="string">&quot;name&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用索引修改</span></span><br><span class="line">someDict[<span class="number">0</span>] = <span class="string">&quot;ban&quot;</span></span><br></pre></td></tr></table></figure><ul><li>移除元素</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用 removeValueForKey() 方法来移除字典 key-value 对,如果 key 存在该方法返回移除的值，如果不存在返回 nil 。</span></span><br><span class="line"><span class="keyword">var</span> removedValue = someDict.removeValue(forKey: <span class="string">&quot;name&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定键值对移除</span></span><br><span class="line">someDict[<span class="string">&quot;name&quot;</span>] = <span class="literal">nil</span></span><br></pre></td></tr></table></figure><ul><li>遍历字典</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (key, value) <span class="keyword">in</span> someDict &#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;字典 key \(key) -  字典 value \(value)&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (key, value) <span class="keyword">in</span> someDict.enumerated() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;字典 key \(key) -  字典 (key, value) 对 \(value)&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>字典转换为数组</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dictKeys = [<span class="type">String</span>](someDict.keys)</span><br><span class="line"><span class="keyword">let</span> dictValues = [<span class="type">String</span>](someDict.values)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;空数组&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>swift 学习笔记一</title>
    <link href="http://example.com/2021/01/13/swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
    <id>http://example.com/2021/01/13/swift-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</id>
    <published>2021-01-13T14:26:57.000Z</published>
    <updated>2021-01-14T16:25:57.374Z</updated>
    
    <content type="html"><![CDATA[<h3 id="类型别名"><a href="#类型别名" class="headerlink" title="类型别名"></a>类型别名</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typealias</span> newname = type</span><br><span class="line"></span><br><span class="line">typealis <span class="type">Feet</span> = <span class="type">Int</span></span><br><span class="line"><span class="keyword">var</span> feet: <span class="type">Feet</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> variableName = &lt;initial value&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;ban&quot;</span></span><br></pre></td></tr></table></figure><ul><li>输出</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">println</span>(<span class="string">&quot;\(name)&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="可选-Optionals-类型"><a href="#可选-Optionals-类型" class="headerlink" title="可选(Optionals)类型"></a>可选(Optionals)类型</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Swift</span> 的可选（<span class="type">Optional</span>）类型，用于处理值缺失的情况。可选表示<span class="string">&quot;那儿有一个值，并且它等于 x &quot;</span>或者<span class="string">&quot;那儿没有值&quot;</span>。</span><br><span class="line"><span class="type">Swfit</span>语言定义后缀？作为命名类型<span class="type">Optional</span>的简写，换句话说，以下两种声明是相等的：</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> optionalInteger: <span class="type">Int?</span></span><br><span class="line"><span class="keyword">var</span> optionalInteger: <span class="type">Optional</span>&lt;<span class="type">Int</span>&gt;</span><br><span class="line">在这两种情况下，变量 optionalInteger 都是可选整数类型。注意，在类型和 ?之间没有空格。</span><br><span class="line"></span><br><span class="line"><span class="type">Optional</span> 是一个含有两种情况的枚举，<span class="type">None</span> 和 <span class="type">Some</span>(<span class="type">T</span>)，用来表示可能有或可能没有值。任何类型都可以明确声明为（或者隐式转换）可选类型。当声明一个可选类型的时候，要确保用括号给 ? 操作符一个合适的范围。例如，声明可选整数数组，应该写成 (<span class="type">Int</span>[])? 写成 <span class="type">Int</span>[]? 会报错。</span><br><span class="line"></span><br><span class="line">当你声明一个可选变量或者可选属性的时候没有提供初始值，它的值会默认为 <span class="literal">nil</span>。</span><br><span class="line"></span><br><span class="line">可选项遵照 <span class="type">LogicValue</span> 协议，因此可以出现在布尔环境中。在这种情况下，如果可选类型<span class="type">T?</span>包含类型为<span class="type">T</span>的任何值（也就是说它的值是 <span class="type">Optional</span>.<span class="type">Some</span>(<span class="type">T</span>) ），这个可选类型等于 <span class="literal">true</span>，反之为 <span class="literal">false</span>。</span><br><span class="line"></span><br><span class="line">如果一个可选类型的实例包含一个值，你可以用后缀操作符 ！来访问这个值，如下所示：</span><br><span class="line"></span><br><span class="line">optionalInteger = <span class="number">42</span></span><br><span class="line">optionalInteger! <span class="comment">// 42</span></span><br><span class="line">使用操作符！去获取值为<span class="literal">nil</span>的可选变量会有运行时错误。</span><br><span class="line"></span><br><span class="line">你可以用可选链接和可选绑定选择性执行可选表达式上的操作。如果值为<span class="literal">nil</span>，任何操作都不会执行，也不会有运行报错。</span><br><span class="line"></span><br><span class="line">让我们来详细看下以下实例来了解 <span class="type">Swift</span> 中可选类型的应用:</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Cocoa</span><br><span class="line"><span class="keyword">var</span> myString:<span class="type">String?</span> = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">if</span> myString != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(myString)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;字符串为 nil&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">以上程序执行结果为：</span><br><span class="line">字符串为 <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">可选类型类似于<span class="type">Objective</span>-<span class="type">C</span>中指针的<span class="literal">nil</span>值，但是<span class="literal">nil</span>只对类(<span class="class"><span class="keyword">class</span>)有用，而可选类型对所有的类型都可用，并且更安全。</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">强制解析</span></span><br><span class="line"><span class="class">当你确定可选类型确实包含值之后，你可以在可选的名字后面加一个感叹号（!）来获取值。这个感叹号表示&quot;我知道这个可选有值，请使用它。&quot;这被称为可选值的强制解析（<span class="title">forced</span> <span class="title">unwrapping</span>）。</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">实例如下：</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">import</span> <span class="title">Cocoa</span></span></span><br><span class="line"><span class="class"><span class="title">var</span> <span class="title">myString</span>:<span class="title">String</span>?</span></span><br><span class="line"><span class="class"><span class="title">myString</span> = &quot;<span class="title">Hello</span>, <span class="title">Swift</span>!&quot;</span></span><br><span class="line"><span class="class"><span class="title">if</span> <span class="title">myString</span> != <span class="title">nil</span> </span>&#123;</span><br><span class="line">   <span class="built_in">print</span>(myString)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;myString 值为 nil&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">以上程序执行结果为：</span><br><span class="line"></span><br><span class="line"><span class="type">Optional</span>(<span class="string">&quot;Hello, Swift!&quot;</span>)</span><br><span class="line">强制解析可选值，使用感叹号（!）：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Cocoa</span><br><span class="line"><span class="keyword">var</span> myString:<span class="type">String?</span></span><br><span class="line">myString = <span class="string">&quot;Hello, Swift!&quot;</span></span><br><span class="line"><span class="keyword">if</span> myString != <span class="literal">nil</span> &#123;</span><br><span class="line">   <span class="comment">// 强制解析</span></span><br><span class="line">   <span class="built_in">print</span>( myString! )</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;myString 值为 nil&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">以上程序执行结果为：</span><br><span class="line"></span><br><span class="line"><span class="type">Hello</span>, <span class="type">Swift!</span></span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">使用!来获取一个不存在的可选值会导致运行时错误。使用!来强制解析值之前，一定要确定可选包含一个非<span class="literal">nil</span>的值。</span><br><span class="line"></span><br><span class="line">自动解析</span><br><span class="line">你可以在声明可选变量时使用感叹号（!）替换问号（?）。这样可选变量在使用时就不需要再加一个感叹号（!）来获取值，它会自动解析。</span><br><span class="line"></span><br><span class="line">实例如下：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Cocoa</span><br><span class="line"><span class="keyword">var</span> myString:<span class="type">String!</span></span><br><span class="line">myString = <span class="string">&quot;Hello, Swift!&quot;</span></span><br><span class="line"><span class="keyword">if</span> myString != <span class="literal">nil</span> &#123;</span><br><span class="line">   <span class="built_in">print</span>(myString)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;myString 值为 nil&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">以上程序执行结果为：</span><br><span class="line"></span><br><span class="line"><span class="type">Hello</span>, <span class="type">Swift!</span></span><br><span class="line">可选绑定</span><br><span class="line">使用可选绑定（<span class="keyword">optional</span> binding）来判断可选类型是否包含值，如果包含就把值赋给一个临时常量或者变量。可选绑定可以用在<span class="keyword">if</span>和<span class="keyword">while</span>语句中来对可选类型的值进行判断并把值赋给一个常量或者变量。</span><br><span class="line"></span><br><span class="line">像下面这样在<span class="keyword">if</span>语句中写一个可选绑定：</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> constantName = someOptional &#123;</span><br><span class="line">    statements</span><br><span class="line">&#125;</span><br><span class="line">让我们来看下一个简单的可选绑定实例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Cocoa</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myString:<span class="type">String?</span></span><br><span class="line"></span><br><span class="line">myString = <span class="string">&quot;Hello, Swift!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> yourString = myString &#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;你的字符串值为 - \(yourString)&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;你的字符串没有值&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">以上程序执行结果为：</span><br><span class="line"></span><br><span class="line">你的字符串值为 - <span class="type">Hello</span>, <span class="type">Swift!</span></span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> constantName = &lt;initial value&gt;</span><br><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;ban&quot;</span></span><br></pre></td></tr></table></figure><ul><li>类型标注</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> constantName:&lt;data type&gt; = &lt;<span class="keyword">optional</span> initial value&gt;</span><br><span class="line"><span class="keyword">var</span> name: <span class="type">String</span> = <span class="string">&quot;ban&quot;</span></span><br></pre></td></tr></table></figure><ul><li>Unicode 支持</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 名字 = <span class="string">&quot;ban&quot;</span></span><br></pre></td></tr></table></figure><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><ul><li>if</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> boolean_expression &#123;</span><br><span class="line">   <span class="comment">/* 如果布尔表达式为真将执行的语句 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> varA:<span class="type">Int</span> = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> varA &lt; <span class="number">20</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;varA 小于 20&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>if else</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> boolean_expression_1 &#123;</span><br><span class="line">   <span class="comment">/* 如果 boolean_expression_1 表达式为 true 则执行该语句 */</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> boolean_expression_2 &#123;</span><br><span class="line">   <span class="comment">/* 如果 boolean_expression_2 表达式为 true 则执行该语句 */</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> boolean_expression_3 &#123;</span><br><span class="line">   <span class="comment">/* 如果 boolean_expression_3 表达式为 true 则执行该语句 */</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="comment">/* 如果以上所有条件表达式都不为 true 则执行该语句 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>嵌套If</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> boolean_expression_1 &#123;</span><br><span class="line">   <span class="comment">/* 当 boolean_expression_1 表达式 true 时执行 */</span></span><br><span class="line">   <span class="keyword">if</span> boolean_expression_2 &#123;</span><br><span class="line">      <span class="comment">/* 当 boolean_expression_1 表达式 true 时执行 */</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>switch</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> expression &#123;</span><br><span class="line">   <span class="keyword">case</span> expression1  :</span><br><span class="line">      statement(s)</span><br><span class="line">      <span class="keyword">fallthrough</span> <span class="comment">/* 可选 */</span></span><br><span class="line">   <span class="keyword">case</span> expression2, expression3  :</span><br><span class="line">      statement(s)</span><br><span class="line">      <span class="keyword">fallthrough</span> <span class="comment">/* 可选 */</span></span><br><span class="line">   <span class="keyword">default</span> : <span class="comment">/* 可选 */</span></span><br><span class="line">      statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：在大多数语言中，switch 语句块中，case 要紧跟 break，否则 case 之后的语句会顺序运行，而在 Swift 语言中，默认是不会执行下去的，switch 也会终止。如果你想在 Swift 中让 case 之后的语句会按顺序继续运行，则需要使用 fallthrough 语句。</p></blockquote><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><ul><li>for in</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="keyword">var</span> &#123;</span><br><span class="line">   循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">1</span>...<span class="number">5</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\(index) 乘于 5 为：\(index * 5)&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>闭区间操作符（…）</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someInts:[<span class="type">Int</span>] = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> someInts &#123;</span><br><span class="line">   <span class="built_in">print</span>( <span class="string">&quot;index 的值为 \(index)&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>while</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line">&#123;</span><br><span class="line">   statement(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数字 0, 字符串 ‘0’ 和 “”, 空的 list(), 及未定义的变量都为 <strong>false</strong> ，其他的则都为 <strong>true</strong>。</p></blockquote><ul><li>repeat…while</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">repeat</span></span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;<span class="keyword">while</span>( condition );</span><br></pre></td></tr></table></figure><blockquote><p>类似 do..while</p></blockquote><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li>空字符串</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="type">String</span>()</span><br></pre></td></tr></table></figure><ul><li>字符串拼接</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;ban&quot;</span></span><br><span class="line">name += <span class="string">&quot;dianhong&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>字符串常量不能被修改。即使用let声明的。</p></blockquote><ul><li>字符串长度</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\(string.<span class="built_in">count</span>)</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;ban&quot;</span></span><br><span class="line"><span class="built_in">println</span>(<span class="string">&quot;\(name.count)&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>字符串内容比较</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringA == stringB</span><br></pre></td></tr></table></figure><ul><li>Unicode字符串</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stringA.utf8</span><br><span class="line">stringA.utf16</span><br></pre></td></tr></table></figure><ul><li>字符串运算</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">isEmpty 判断字符串是否为空，返回布尔值</span><br><span class="line">hasPrefix(<span class="keyword">prefix</span>: <span class="type">String</span>) 检查字符串是否拥有特定前缀</span><br><span class="line">hasSuffix(suffix: <span class="type">String</span>) 检查字符串是否拥有特定后缀。</span><br><span class="line"><span class="type">Int</span>(<span class="type">String</span>) 转换字符串数字为整型</span><br><span class="line"><span class="type">String</span>.<span class="built_in">count</span> 计算字符串的长度</span><br><span class="line">utf8 可以通过遍历 <span class="type">String</span> 的 utf8 属性来访问它的 <span class="type">UTF</span>-<span class="number">8</span> 编码</span><br><span class="line">utf16 可以通过遍历 <span class="type">String</span> 的 utf8 属性来访问它的 utf16 编码</span><br><span class="line">unicodeScalars 可以通过遍历<span class="type">String</span>值的unicodeScalars属性来访问它的 <span class="type">Unicode</span> 标量编码.</span><br><span class="line">+ 连接两个字符串，并返回一个新的字符串</span><br><span class="line">+= 连接操作符两边的字符串并将新字符串赋值给左边的操作符变量</span><br><span class="line">== 判断两个字符串是否相等</span><br><span class="line">&lt; 比较两个字符串，对两个字符串的字母逐一比较。</span><br><span class="line">!= 比较两个字符串是否不相等。</span><br></pre></td></tr></table></figure><h3 id="字符-Character"><a href="#字符-Character" class="headerlink" title="字符(Character)"></a>字符(Character)</h3><blockquote><p>字符只有一个</p><p>字符不能为空</p></blockquote><ul><li>字符串连接字符</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> varA:<span class="type">String</span> = <span class="string">&quot;Hello &quot;</span></span><br><span class="line"><span class="keyword">let</span> varB:<span class="type">Character</span> = <span class="string">&quot;G&quot;</span></span><br><span class="line">varA.append( varB )</span><br></pre></td></tr></table></figure><h3 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h3><p><code>_</code> 下划线，系统会忽略，可以用来做占位符。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="keyword">_</span> <span class="keyword">in</span> <span class="number">1</span>...<span class="number">8</span> &#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我爱你&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;类型别名&quot;&gt;&lt;a href=&quot;#类型别名&quot; class=&quot;headerlink&quot; title=&quot;类型别名&quot;&gt;&lt;/a&gt;类型别名&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    
    <category term="swift笔记" scheme="http://example.com/tags/swift%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>ios实现轨迹采集</title>
    <link href="http://example.com/2021/01/01/ios%E5%AE%9E%E7%8E%B0%E8%BD%A8%E8%BF%B9%E9%87%87%E9%9B%86/"/>
    <id>http://example.com/2021/01/01/ios%E5%AE%9E%E7%8E%B0%E8%BD%A8%E8%BF%B9%E9%87%87%E9%9B%86/</id>
    <published>2021-01-01T05:03:32.000Z</published>
    <updated>2021-01-01T05:25:19.669Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>用户使用APP进行轨迹采集，每隔一段时间记录一下当前位置坐标，保持后台运行。</p><h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h1><ul><li>数据库 sqlite + BGFMDB</li><li>定位使用 INTULocationManager</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>TODO:待补充</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;p&gt;用户使用APP进行轨迹采集，每隔一段时间记录一下当前位置坐标，保持后台运行。&lt;/p&gt;
&lt;h1 id=&quot;架构&quot;&gt;&lt;a href=&quot;#架构&quot; c</summary>
      
    
    
    
    
    <category term="轨迹采集" scheme="http://example.com/tags/%E8%BD%A8%E8%BF%B9%E9%87%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>中国行政区划表-SQL</title>
    <link href="http://example.com/2021/01/01/%E4%B8%AD%E5%9B%BD%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92%E8%A1%A8-SQL/"/>
    <id>http://example.com/2021/01/01/%E4%B8%AD%E5%9B%BD%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92%E8%A1%A8-SQL/</id>
    <published>2021-01-01T04:57:29.000Z</published>
    <updated>2021-01-01T05:01:15.468Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/reference/org_division">Division</a></p><h1 id="查询方法"><a href="#查询方法" class="headerlink" title="查询方法"></a>查询方法</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--SELECT * from org_division WHERE parent_id=&#x27;root&#x27; ORDER BY create_time ASC;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">--查询市</span></span><br><span class="line">     <span class="comment">--SELECT * from org_division WHERE parent_id=&#x27;20c49eb015cf48e9a45eee413578e62f&#x27;;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">--查询区</span></span><br><span class="line">     <span class="comment">--SELECT * from org_division WHERE parent_id=&#x27;13afafd6a30f4169a11a6ef8174b6581&#x27;;</span></span><br></pre></td></tr></table></figure><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">NSString *path &#x3D; [[NSBundle mainBundle] pathForResource:@&quot;4330d398bfc148e2964492aead40b907&quot; ofType:@&quot;sqlite3&quot;];</span><br><span class="line">    FMDatabase *fmdb &#x3D; [FMDatabase databaseWithPath:path];</span><br><span class="line">    </span><br><span class="line">    if ([fmdb open]) &#123;</span><br><span class="line">        fmdb.logsErrors &#x3D; YES;</span><br><span class="line">        &#x2F;&#x2F;1.query</span><br><span class="line">        NSString *query &#x3D; [NSString stringWithFormat:@&quot;SELECT * from org_division WHERE parent_id&#x3D;&#39;%@&#39; ORDER BY create_time ASC&quot;,parentId &#x3D;&#x3D; nil ? @&quot;root&quot; : parentId];</span><br><span class="line">        FMResultSet *rs &#x3D; [fmdb executeQuery:query];</span><br><span class="line">        &#x2F;&#x2F; 2.遍历结果集</span><br><span class="line">        NSMutableArray *arrM &#x3D; [NSMutableArray array];</span><br><span class="line">        while (rs.next) &#123;</span><br><span class="line">            NSMutableDictionary* dictM &#x3D; [[NSMutableDictionary alloc] init];</span><br><span class="line">            for (int i&#x3D;0;i&lt;[[[rs columnNameToIndexMap] allKeys] count];i++) &#123;</span><br><span class="line">                dictM[[rs columnNameForIndex:i]] &#x3D; [rs objectForColumnIndex:i];</span><br><span class="line">            &#125;</span><br><span class="line">            GPAdministrativeDivisionsModel *m &#x3D; [GPAdministrativeDivisionsModel new];</span><br><span class="line">            m.divisionCode &#x3D; dictM[@&quot;division_code&quot;];</span><br><span class="line">            m.divisionName &#x3D; dictM[@&quot;division_name&quot;];</span><br><span class="line">            m.divisionId &#x3D; dictM[@&quot;division_id&quot;];</span><br><span class="line">            m.parentId &#x3D; dictM[@&quot;parent_id&quot;];</span><br><span class="line">            m.divisionType &#x3D; @&quot;&quot;;</span><br><span class="line">            &#x2F;&#x2F;单独处理4个直辖市</span><br><span class="line">            if ([m.divisionName isEqualToString:@&quot;北京市&quot;] || [m.divisionName isEqualToString:@&quot;上海市&quot;]</span><br><span class="line">                || [m.divisionName isEqualToString:@&quot;天津市&quot;] || [m.divisionName isEqualToString:@&quot;重庆市&quot;]) &#123;</span><br><span class="line">                m.divisionType &#x3D; @&quot;Municipality&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            [arrM addObject:m];</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;查询完后要关闭rs，不然会报@&quot;Warning: there is at least one open result set around after performing</span><br><span class="line">        [rs close];</span><br><span class="line">        [fmdb close];</span><br><span class="line">        if (completion) &#123;</span><br><span class="line">            completion(arrM,nil);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        NSLog(@&quot;db is not open.&quot;);</span><br><span class="line">        if (completion) &#123;</span><br><span class="line">            completion(nil,[NSError errorWithDomain:NSURLErrorDomain code:@&quot;400&quot; userInfo:@&#123;NSLocalizedDescriptionKey:@&quot;内部数据库打开失败&quot;&#125;]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目地址&quot;&gt;&lt;a href=&quot;#项目地址&quot; class=&quot;headerlink&quot; title=&quot;项目地址&quot;&gt;&lt;/a&gt;项目地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/reference/org_division&quot;&gt;Division&lt;/</summary>
      
    
    
    
    
    <category term="sql" scheme="http://example.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>ArcGis 地图标记和自定义弹出框</title>
    <link href="http://example.com/2020/12/31/ArcGis-%E5%9C%B0%E5%9B%BE%E6%A0%87%E8%AE%B0%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%B9%E5%87%BA%E6%A1%86/"/>
    <id>http://example.com/2020/12/31/ArcGis-%E5%9C%B0%E5%9B%BE%E6%A0%87%E8%AE%B0%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%B9%E5%87%BA%E6%A1%86/</id>
    <published>2020-12-31T06:47:19.000Z</published>
    <updated>2020-12-31T06:55:04.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AGSPictureMarkerSymbol-标记"><a href="#AGSPictureMarkerSymbol-标记" class="headerlink" title="AGSPictureMarkerSymbol 标记"></a>AGSPictureMarkerSymbol 标记</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (AGSGraphic *)pinAtPoint:(AGSPoint *)point info:(NSDictionary *)info</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;要展示的图片</span><br><span class="line">    UIImage *image &#x3D; __IMG(@&quot;icon-forum&quot;);</span><br><span class="line">    AGSPictureMarkerSymbol *pictureMarkerSymbol  &#x3D; [AGSPictureMarkerSymbol pictureMarkerSymbolWithImage:image];</span><br><span class="line">    pictureMarkerSymbol.width &#x3D;</span><br><span class="line">    pictureMarkerSymbol.height &#x3D; 20;</span><br><span class="line">    &#x2F;&#x2F;设置属性值  用于传参  在代理方法中可以获取到</span><br><span class="line">    AGSGraphic *graphic &#x3D; [AGSGraphic graphicWithGeometry:point symbol:pictureMarkerSymbol attributes:info];</span><br><span class="line">    &#x2F;&#x2F; Add polygon graphic to graphics overlay.</span><br><span class="line">    [self.graphicsOverlay.graphics addObject:graphic];</span><br><span class="line">    return graphic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (YXForumDataInfoModel *m in ms) &#123;</span><br><span class="line">                    CLLocationCoordinate2D coords &#x3D; CLLocationCoordinate2DMake(m.lat,m.lon);&#x2F;&#x2F;纬度，经度</span><br><span class="line">                    [[BDArcGISUtil ins] pinAtPoint:[AGSPoint pointWithCLLocationCoordinate2D:coords] info:[m yy_modelToJSONObject]];</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><h1 id="AGSMapView的callout"><a href="#AGSMapView的callout" class="headerlink" title="AGSMapView的callout"></a>AGSMapView的callout</h1><p>为实现点击标点位置的点击，使用AGSMapView的如下回调</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;** Tells the delegate that the user single-tapped at the specified location.</span><br><span class="line"> @param geoView on which the user performed the interaction.</span><br><span class="line"> @param screenPoint Location where the user tapped in screen coordinates.</span><br><span class="line"> @param mapPoint Location where the user tapped in map coordinates.</span><br><span class="line"> @since 100</span><br><span class="line"> *&#x2F;</span><br><span class="line">- (void)geoView:(AGSGeoView *)geoView didTapAtScreenPoint:(CGPoint)screenPoint mapPoint:(AGSPoint *)mapPoint;</span><br></pre></td></tr></table></figure><p>为监测点击的区域是否打点区域，使用AGSMapView的如下方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;** Identify (hit-test) which graphics appear at the specified screen coordinates in the provided graphics overlay.</span><br><span class="line"> @param graphicsOverlay in which to identify graphics</span><br><span class="line"> @param screenPoint at which to identify graphics</span><br><span class="line"> @param tolerance radius in points specifying how precise the identify operation should be. A value of 0 means that it should be extremely precise - only those graphics appearing at the exact coordinates should be returned. A value of 22 (a good default for touch displays which covers an average finger tap) means graphics appearing within a 44 pt buffer can also be returned. Max value permitted is 100.</span><br><span class="line"> @param returnPopupsOnly specifies what the identify results should contain. If set to YES, only overlays with popups will be retured. If set to NO, all overlays (with or without popups) will be retured.</span><br><span class="line"> @param maximumResults that should be returned as the result</span><br><span class="line"> @param completion block that is invoked when the operation is complete with the result.</span><br><span class="line"> @return operation which can be canceled</span><br><span class="line"> @since 100</span><br><span class="line"> *&#x2F;</span><br><span class="line">-(id&lt;AGSCancelable&gt;)identifyGraphicsOverlay:(AGSGraphicsOverlay*)graphicsOverlay</span><br><span class="line">                                 screenPoint:(CGPoint)screenPoint</span><br><span class="line">                                   tolerance:(double)tolerance</span><br><span class="line">                            returnPopupsOnly:(BOOL)returnPopupsOnly</span><br><span class="line">                              maximumResults:(NSInteger)maximumResults</span><br><span class="line">                                  completion:(void(^)(AGSIdentifyGraphicsOverlayResult *identifyResult))completion;</span><br></pre></td></tr></table></figure><p>案例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark Tap</span><br><span class="line"></span><br><span class="line">- (void)geoView:(AGSGeoView *)geoView didTapAtScreenPoint:(CGPoint)screenPoint mapPoint:(AGSPoint *)mapPoint</span><br><span class="line">&#123;</span><br><span class="line">    [geoView identifyGraphicsOverlay:geoView.graphicsOverlays.firstObject screenPoint:screenPoint tolerance:12 returnPopupsOnly:NO maximumResults:1000 completion:^(AGSIdentifyGraphicsOverlayResult * _Nonnull identifyResult) &#123;</span><br><span class="line">            if (identifyResult.error) &#123;</span><br><span class="line">                NSLog(@&quot;error %@&quot;,identifyResult.error.localizedDescription);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                NSMutableArray *forumDataInfoModels &#x3D; [NSMutableArray array];</span><br><span class="line">                &#x2F;&#x2F;获得锚点的信息</span><br><span class="line">                for (AGSGraphic *graphic in identifyResult.graphics) &#123;</span><br><span class="line">                    NSLog(@&quot;info %@&quot;,graphic.attributes);</span><br><span class="line">                    YXForumDataInfoModel *m &#x3D; [YXForumDataInfoModel yy_modelWithJSON:[graphic.attributes yy_modelToJSONObject]];</span><br><span class="line">                    [forumDataInfoModels addObject:m];</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                &#x2F;&#x2F; if info is exsit 弹出框</span><br><span class="line">                if (forumDataInfoModels.count) &#123;</span><br><span class="line">                    &#x2F;&#x2F;callout</span><br><span class="line">                    GPHomeMapCalloutView *customView &#x3D; [UINib viewForNib:NSStringFromClass(GPHomeMapCalloutView.class)];</span><br><span class="line">                    &#x2F;&#x2F;set data</span><br><span class="line">                    customView.forumDataInfoModels &#x3D; forumDataInfoModels;</span><br><span class="line">                    &#x2F;&#x2F; add new</span><br><span class="line">                    customView.didAddNew &#x3D; ^(AGSPoint * _Nonnull point) &#123;</span><br><span class="line">                        addNewForum(point);</span><br><span class="line">                    &#125;;</span><br><span class="line">                    &#x2F;&#x2F;did select item</span><br><span class="line">                    customView.didSelectForum &#x3D; ^(YXForumDataInfoModel * _Nonnull forumInfoModel) &#123;</span><br><span class="line">                        &#x2F;&#x2F; dismiss callout</span><br><span class="line">                        [geoView.callout dismiss];</span><br><span class="line">                        &#x2F;&#x2F; build a forum list model</span><br><span class="line">                        YXFormListModel *flm &#x3D; [YXFormListModel new];</span><br><span class="line">                        flm.uuid &#x3D; forumInfoModel.uuid;</span><br><span class="line">                        &#x2F;&#x2F;goto forum detail</span><br><span class="line">                        [GPForumJumper jumpToForumWithType:[NSString stringWithFormat:@&quot;%li&quot;,forumInfoModel.type] fromViewController:self taskModel:nil projectModel:nil point:mapPoint interfaceStatus:InterfaceStatus_Show forum:flm table:nil];</span><br><span class="line">                    &#125;;</span><br><span class="line">                    &#x2F;&#x2F;add customer view</span><br><span class="line">                    self.mapView.callout.customView &#x3D; customView;</span><br><span class="line">                    &#x2F;&#x2F;show callout</span><br><span class="line">                    [self.mapView.callout showCalloutAt:mapPoint screenOffset:CGPointZero rotateOffsetWithMap:YES animated:YES];</span><br><span class="line">                &#125;</span><br><span class="line">                else&#123;</span><br><span class="line">                    [geoView.callout dismiss];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AGSPictureMarkerSymbol-标记&quot;&gt;&lt;a href=&quot;#AGSPictureMarkerSymbol-标记&quot; class=&quot;headerlink&quot; title=&quot;AGSPictureMarkerSymbol 标记&quot;&gt;&lt;/a&gt;AGSPictureM</summary>
      
    
    
    
    
    <category term="ArcGis callout" scheme="http://example.com/tags/ArcGis-callout/"/>
    
  </entry>
  
  <entry>
    <title>UITextField 输入空格和删除键的处理</title>
    <link href="http://example.com/2020/12/31/UITextField-%E8%BE%93%E5%85%A5%E7%A9%BA%E6%A0%BC%E5%92%8C%E5%88%A0%E9%99%A4%E9%94%AE%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <id>http://example.com/2020/12/31/UITextField-%E8%BE%93%E5%85%A5%E7%A9%BA%E6%A0%BC%E5%92%8C%E5%88%A0%E9%99%A4%E9%94%AE%E7%9A%84%E5%A4%84%E7%90%86/</id>
    <published>2020-12-30T16:11:26.000Z</published>
    <updated>2020-12-30T16:14:07.407Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>​    有时候为了控制输入，需要在delegate中实现控制。上代码</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - textfield delegate</span><br><span class="line"></span><br><span class="line">- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;删除</span><br><span class="line">    if ([string isEqualToString:@&quot;&quot;]) &#123;</span><br><span class="line">        if (textField.text.length &#x3D;&#x3D; 1) &#123;</span><br><span class="line">&#x2F;&#x2F;TODO:handle your stuff</span><br><span class="line">return YES;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;空格</span><br><span class="line">    if ([string isEqualToString:@&quot; &quot;]) &#123;</span><br><span class="line">        textField.text &#x3D; [textField.text trim];</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line">   &#x2F;&#x2F;TODO:handle your stuff</span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;​    有时候为了控制输入，需要在delegate中实现控制。上代码&lt;/p&gt;
&lt;h1 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; clas</summary>
      
    
    
    
    
    <category term="UITextField" scheme="http://example.com/tags/UITextField/"/>
    
  </entry>
  
  <entry>
    <title>mysql 5.7安装</title>
    <link href="http://example.com/2020/12/20/mysql-5-7%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2020/12/20/mysql-5-7%E5%AE%89%E8%A3%85/</id>
    <published>2020-12-20T14:30:06.000Z</published>
    <updated>2020-12-20T14:45:03.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.31-linux-glibc2.12-x86_64.tar">https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.31-linux-glibc2.12-x86_64.tar</a></p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>​    Shell登陆服务器,使用wget下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.31-linux-glibc2.12-x86_64.tar</span></span><br></pre></td></tr></table></figure><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tar -xvf mysql-5.7.31-linux-glibc2.12-x86_64.tar</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tar -xvf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="挪一下"><a href="#挪一下" class="headerlink" title="挪一下"></a>挪一下</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mv mysql-5.7.31-linux-glibc2.12-x86_64 /usr/<span class="built_in">local</span>/mysql</span></span><br></pre></td></tr></table></figure><h1 id="创建数据目录并赋予权限"><a href="#创建数据目录并赋予权限" class="headerlink" title="创建数据目录并赋予权限"></a>创建数据目录并赋予权限</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkdir -p  /data/mysql</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chown mysql:mysql -R /data/mysql</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载地址&quot;&gt;&lt;a href=&quot;#下载地址&quot; class=&quot;headerlink&quot; title=&quot;下载地址&quot;&gt;&lt;/a&gt;下载地址&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.31</summary>
      
    
    
    
    
    <category term="mysql5.7 linux" scheme="http://example.com/tags/mysql5-7-linux/"/>
    
  </entry>
  
  <entry>
    <title>Idea 使用Mybatis-generator生成模型</title>
    <link href="http://example.com/2020/12/20/Idea-%E4%BD%BF%E7%94%A8Mybatis-generator%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B/"/>
    <id>http://example.com/2020/12/20/Idea-%E4%BD%BF%E7%94%A8Mybatis-generator%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B/</id>
    <published>2020-12-20T08:44:45.000Z</published>
    <updated>2020-12-20T09:11:13.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库创建表"><a href="#数据库创建表" class="headerlink" title="数据库创建表"></a>数据库创建表</h1><p>​    不用多说，这是基本。</p><h1 id="插件地址"><a href="#插件地址" class="headerlink" title="插件地址"></a>插件地址</h1><p><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.40<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="generatorConfig-xml"><a href="#generatorConfig-xml" class="headerlink" title="generatorConfig.xml"></a>generatorConfig.xml</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD MyBatis Generator Configuration 1.0&#x2F;&#x2F;EN&quot;</span><br><span class="line">        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;context id&#x3D;&quot;context1&quot;&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span><br><span class="line">            &lt;property name&#x3D;&quot;suppressAllComments&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;commentGenerator&gt;</span><br><span class="line">        &lt;!-- 数据库链接URL、用户名、密码 --&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass&#x3D;&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">        connectionURL&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;100.100.100.100:3306&#x2F;test?useSSL&#x3D;false&quot; userId&#x3D;&quot;root&quot; password&#x3D;&quot;bandianhong&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和</span><br><span class="line">            NUMERIC 类型解析为java.math.BigDecimal --&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name&#x3D;&quot;forceBigDecimals&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成模型的包名和位置 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage&#x3D;&quot;com.scottban.jihejingjia.bean&quot; targetProject&#x3D;&quot;src&#x2F;main&#x2F;java&quot; &#x2F;&gt;</span><br><span class="line">        &lt;!-- 生成的映射文件报名和位置 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage&#x3D;&quot;com.scottban.jihejingjia.mapper&quot; targetProject&#x3D;&quot;src&#x2F;main&#x2F;java&quot; &#x2F;&gt;</span><br><span class="line">        &lt;!-- 生成DAO的包名和位置 --&gt;</span><br><span class="line">        &lt;javaClientGenerator targetPackage&#x3D;&quot;com.scottban.jihejingjia.dao&quot; targetProject&#x3D;&quot;src&#x2F;main&#x2F;java&quot; type&#x3D;&quot;XMLMAPPER&quot; &#x2F;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;!-- 要生成的那些表(更改tableName 和domainObjectName 就可以了) --&gt;</span><br><span class="line">        &lt;table tableName&#x3D;&quot;student&quot; domainObjectName&#x3D;&quot;student&quot; enableCountByExample&#x3D;&quot;false&quot; enableUpdateByExample&#x3D;&quot;false&quot;</span><br><span class="line">                   enableDeleteByExample&#x3D;&quot;false&quot; enableSelectByExample&#x3D;&quot;false&quot; selectByExampleQueryId&#x3D;&quot;false&quot;&gt;</span><br><span class="line">        &lt;&#x2F;table&gt;</span><br><span class="line">    &lt;&#x2F;context&gt;</span><br><span class="line">&lt;&#x2F;generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><h1 id="使用插件生成"><a href="#使用插件生成" class="headerlink" title="使用插件生成"></a>使用插件生成</h1><p><img src="https://img.wenhairu.com/images/2020/12/20/DmRlp.md.png"></p><h1 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h1><blockquote><h1 id="Establishing-SSL-connection-without-server’s-identity-verification…"><a href="#Establishing-SSL-connection-without-server’s-identity-verification…" class="headerlink" title="Establishing SSL connection without server’s identity verification…"></a>Establishing SSL connection without server’s identity verification…</h1></blockquote><p>​        解决：<a href="https://blog.csdn.net/huang_xin2016/article/details/79757799">https://blog.csdn.net/huang_xin2016/article/details/79757799</a></p><blockquote><h1 id="The-specified-target-project-directory-…-does-not-exist"><a href="#The-specified-target-project-directory-…-does-not-exist" class="headerlink" title="The specified target project directory …..does not exist"></a>The specified target project directory …..does not exist</h1></blockquote><p>​        解决：<a href="https://blog.csdn.net/supreme000/article/details/96142362">https://blog.csdn.net/supreme000/article/details/96142362</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库创建表&quot;&gt;&lt;a href=&quot;#数据库创建表&quot; class=&quot;headerlink&quot; title=&quot;数据库创建表&quot;&gt;&lt;/a&gt;数据库创建表&lt;/h1&gt;&lt;p&gt;​    不用多说，这是基本。&lt;/p&gt;
&lt;h1 id=&quot;插件地址&quot;&gt;&lt;a href=&quot;#插件地址&quot; clas</summary>
      
    
    
    
    
    <category term="idea mybatis-generator" scheme="http://example.com/tags/idea-mybatis-generator/"/>
    
  </entry>
  
  <entry>
    <title>分发的plist</title>
    <link href="http://example.com/2020/12/19/%E5%88%86%E5%8F%91%E7%9A%84plist/"/>
    <id>http://example.com/2020/12/19/%E5%88%86%E5%8F%91%E7%9A%84plist/</id>
    <published>2020-12-19T03:08:47.000Z</published>
    <updated>2020-12-19T03:10:19.235Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="meta-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>items<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>assets<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>software-package<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>ipa包URL（必填）<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>full-size-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>下载时大图（非必填）<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>display-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>下载时小图（非必填）<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>BundleID（必填）<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-version<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>software<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>subtitle<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>副标题（非必填）<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">key</span>&gt;</span>title<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">string</span>&gt;</span>应用名（必填）<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Download:</p><p>itms-services://?action=download-manifest&amp;url=<a href="https://www.baidu.com/ios/ceshi.plist&quot;">https://www.baidu.com/ios/ceshi.plist&quot;</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plist&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
    <category term="plist" scheme="http://example.com/tags/plist/"/>
    
  </entry>
  
  <entry>
    <title>Realm</title>
    <link href="http://example.com/2020/12/12/Realm/"/>
    <id>http://example.com/2020/12/12/Realm/</id>
    <published>2020-12-11T17:08:14.000Z</published>
    <updated>2020-12-11T17:10:50.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Realm 用于替代sqlite</p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>Realm的源码地址：<a href="https://github.com/realm/realm-cocoa">https://github.com/realm/realm-cocoa</a></p><p>编译使用到<a href="https://github.com/realm/jazzy">jazzy</a></p><h1 id="jazzy"><a href="#jazzy" class="headerlink" title="jazzy"></a>jazzy</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jazzy is a command-line utility that generates documentation for Swift or Objective-C</span><br></pre></td></tr></table></figure><h1 id="数据库工具"><a href="#数据库工具" class="headerlink" title="数据库工具"></a>数据库工具</h1><p><a href="https://realm.io/products/realm-studio/">Realm-Studio</a></p><p>Mac 下载地址：<a href="https://realm.io/docs">https://realm.io/docs</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Realm 用于替代sqlite&lt;/p&gt;
&lt;h1 id=&quot;编译&quot;&gt;&lt;a href=&quot;#编译&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="Realm" scheme="http://example.com/tags/Realm/"/>
    
  </entry>
  
  <entry>
    <title>mac2020 M1芯片下YYKit依赖的webP不支持模拟器编译解决方案</title>
    <link href="http://example.com/2020/12/09/mac2020-M1%E8%8A%AF%E7%89%87%E4%B8%8BYYKit%E4%BE%9D%E8%B5%96%E7%9A%84webP%E4%B8%8D%E6%94%AF%E6%8C%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%BC%96%E8%AF%91%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://example.com/2020/12/09/mac2020-M1%E8%8A%AF%E7%89%87%E4%B8%8BYYKit%E4%BE%9D%E8%B5%96%E7%9A%84webP%E4%B8%8D%E6%94%AF%E6%8C%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%BC%96%E8%AF%91%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-12-09T06:32:55.000Z</published>
    <updated>2020-12-09T06:41:58.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>新版MacBook Pro 由于采用了M1芯片代替了原先的，有些库并不支持。如果项目中用到了YYKit，那恭喜你这个问题一定会遇到。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in &#x2F;Users&#x2F;admin&#x2F;Desktop&#x2F;x&#x2F;code&#x2F;AFDAS&#x2F;Pods&#x2F;YYKit&#x2F;Vendor&#x2F;WebP.framework&#x2F;WebP(libwebpencode_la-config.o), building for iOS Simulator, but linking in object file built for iOS, for architecture arm64</span><br></pre></td></tr></table></figure><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>最简单的解决方案就是替换掉/YYKit/Vendor/WebP.framework。webP是Google开发的一个库，所以我们直接去官网下载这个库。</p><p>我们找到2020年12月的这个版本，因为macbook是11月发布的。</p><p>下载地址：[<a href="http://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.1.0-rc2-ios-framework.tar.gz">libwebp-1.1.0-rc2-ios-framework.tar.gz</a>]</p><p><a href="http://downloads.webmproject.org/releases/webp/index.html">官方网址</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/Xunqf/libwebp">https://github.com/Xunqf/libwebp</a></p><p><a href="https://www.jianshu.com/p/1f427707f922?utm_campaign=hugo">iOS利用SDWebImage加载webP图片</a></p><p><a href="https://www.jianshu.com/p/a74bc04a8c8c">解决sdwebimage/webp 与 yykit 的冲突</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;新版MacBook Pro 由于采用了M1芯片代替了原先的，有些库并不支持。如果项目中用到了YYKit，那恭喜你这个问题一定会遇到。&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="webP" scheme="http://example.com/tags/webP/"/>
    
  </entry>
  
  <entry>
    <title>SwiftUI 是历史的进步还是倒退？</title>
    <link href="http://example.com/2020/12/05/SwiftUI-%E6%98%AF%E5%8E%86%E5%8F%B2%E7%9A%84%E8%BF%9B%E6%AD%A5%E8%BF%98%E6%98%AF%E5%80%92%E9%80%80%EF%BC%9F/"/>
    <id>http://example.com/2020/12/05/SwiftUI-%E6%98%AF%E5%8E%86%E5%8F%B2%E7%9A%84%E8%BF%9B%E6%AD%A5%E8%BF%98%E6%98%AF%E5%80%92%E9%80%80%EF%BC%9F/</id>
    <published>2020-12-05T07:17:02.000Z</published>
    <updated>2020-12-05T07:25:07.539Z</updated>
    
    <content type="html"><![CDATA[<p>​        今天说说swiftui，算是一个老程序员的心声。第一次看到swiftui的时候，内心还是很欢喜的，但是在接触了一下想要用于项目的时候，我犹豫了。为什么呢？作为一个从2011年就开始被各种手写UI折磨的人来说，swiftui并没有真正解决我的需求，反而是storyboard解决了我的需求。我们都知道，在快速出产品占领市场的年代，如果速度慢就有可能一个项目就此黄了。我也经历了不少这样的项目。之前用过一个叫做Beeframework的框架，它的ui架构核心思想跟swiftui很相似，都试图用h5那一套思路来解决布局的问题，但是很麻烦，维护也不好维护。我个人认为，这个界面布局的发展应该是这样的：手写界面–&gt;swiftui–&gt;storyboard，但是现在是这样：手写界面-storyboard-swiftui。试问一下，哪个程序员喜欢写代码？如果妥妥拽拽就解决问题，效率还更高，何乐不为呢？</p><p>​        SwiftUI,I say No.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        今天说说swiftui，算是一个老程序员的心声。第一次看到swiftui的时候，内心还是很欢喜的，但是在接触了一下想要用于项目的时候，我犹豫了。为什么呢？作为一个从2011年就开始被各种手写UI折磨的人来说，swiftui并没有真正解决我的需求，反而是st</summary>
      
    
    
    
    
    <category term="SwiftUI" scheme="http://example.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>PS 人像修图教程</title>
    <link href="http://example.com/2020/12/04/PS-%E4%BA%BA%E5%83%8F%E4%BF%AE%E5%9B%BE%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2020/12/04/PS-%E4%BA%BA%E5%83%8F%E4%BF%AE%E5%9B%BE%E6%95%99%E7%A8%8B/</id>
    <published>2020-12-04T04:55:48.000Z</published>
    <updated>2020-12-04T06:07:15.804Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h1><p><img src="https://img.alicdn.com/imgextra/i2/3350662477/TB2hEXektfJ8KJjy0FeXXXKEXXa_!!3350662477.png"></p><p><img src="https://img.alicdn.com/imgextra/i2/3350662477/TB2WA6adRfM8KJjSZFrXXXSdXXa_!!3350662477.png"></p><p><img src="https://img.alicdn.com/imgextra/i1/3350662477/TB2oUS7dFYM8KJjSZFuXXcf7FXa_!!3350662477.png"></p><p><img src="https://img.alicdn.com/imgextra/i1/3350662477/TB2GBradKLM8KJjSZFqXXa7.FXa_!!3350662477.png"></p><p><img src="https://img.alicdn.com/imgextra/i2/3350662477/TB28DCic7fb_uJkSnfoXXb_epXa_!!3350662477.png"></p><p><img src="https://img.alicdn.com/imgextra/i1/3350662477/TB2v3xca6b.heNjSZFAXXchKXXa_!!3350662477.png"></p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p><img src="https://img.alicdn.com/imgextra/i3/3350662477/TB2ScDJiNrI8KJjy0FpXXb5hVXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i2/3350662477/TB25KztiRHH8KJjy0FbXXcqlpXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i3/3350662477/TB2M8pWdlfM8KJjSZFhXXcRyFXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i2/3350662477/TB2SpcBi_TI8KJjSsphXXcFppXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i3/3350662477/TB2oVUqiILJ8KJjy0FnXXcFDpXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i3/3350662477/TB26.WIj0nJ8KJjSszdXXaxuFXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i2/3350662477/TB2MR.wikfb_uJjSsrbXXb6bVXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i3/3350662477/TB2QQGUjL2H8KJjy1zkXXXr7pXa_!!3350662477.jpg"></p><p><img src="https://img.alicdn.com/imgextra/i4/3350662477/TB25xvgjILJ8KJjy0FnXXcFDpXa_!!3350662477.jpg"></p><h1 id="工具插件"><a href="#工具插件" class="headerlink" title="工具插件"></a>工具插件</h1><ul><li><a href="https://www.imagenomic.com/Products/Portraiture">Portraiture</a></li><li><a href="https://imagenomic.com/Products/Noiseware">Noiseware</a></li></ul><h1 id="PS-Neural-Filters"><a href="#PS-Neural-Filters" class="headerlink" title="PS Neural Filters"></a>PS Neural Filters</h1><p>Ps 内部滤镜，Portraiture的磨皮我感觉已经赶不上里面的皮肤平滑度了。</p><p><img src="https://img.wenhairu.com/images/2020/12/04/WTm1p.png"></p><p><img src="https://img.wenhairu.com/images/2020/12/04/WOxQH.png"></p><h1 id="RAW-免费图片下载"><a href="#RAW-免费图片下载" class="headerlink" title="RAW 免费图片下载"></a>RAW 免费图片下载</h1><p><a href="https://www.signatureedits.com/free-raw-photos/">这个网站</a></p><h1 id="相关课程"><a href="#相关课程" class="headerlink" title="相关课程"></a>相关课程</h1><p><a href="https://zhuanlan.zhihu.com/p/69088929">中性灰磨皮</a></p><p><a href="https://zhuanlan.zhihu.com/p/42707092">拍照技巧</a></p><p><a href="https://www.instagram.com/gilmarphotos/?hl=ja">Gilmar’Silva</a></p><h1 id="淘宝课程"><a href="#淘宝课程" class="headerlink" title="淘宝课程"></a>淘宝课程</h1><p><a href="https://detail.tmall.com/item.htm?spm=a220l.1.0.0.e23f7f33eVultV&amp;id=613205175423">https://detail.tmall.com/item.htm?spm=a220l.1.0.0.e23f7f33eVultV&amp;id=613205175423</a></p><p><a href="https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.196.2a0be8aacadj4w&amp;id=555959556398&amp;areaId=110100&amp;user_id=3350662477&amp;cat_id=2&amp;is_b=1&amp;rn=138fac5f179fdf14cfe9edddce1b4677">https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.196.2a0be8aacadj4w&amp;id=555959556398&amp;areaId=110100&amp;user_id=3350662477&amp;cat_id=2&amp;is_b=1&amp;rn=138fac5f179fdf14cfe9edddce1b4677</a></p><p><a href="https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.1.61e8e8aajO5meH&amp;id=570372422824&amp;areaId=110100&amp;user_id=3350662477&amp;cat_id=2&amp;is_b=1&amp;rn=2b4186fed069e90be5e918b0be57e485">https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.1.61e8e8aajO5meH&amp;id=570372422824&amp;areaId=110100&amp;user_id=3350662477&amp;cat_id=2&amp;is_b=1&amp;rn=2b4186fed069e90be5e918b0be57e485</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;课程&quot;&gt;&lt;a href=&quot;#课程&quot; class=&quot;headerlink&quot; title=&quot;课程&quot;&gt;&lt;/a&gt;课程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i2/3350662477/TB2hEXektfJ8KJ</summary>
      
    
    
    
    
    <category term="PS人像修图" scheme="http://example.com/tags/PS%E4%BA%BA%E5%83%8F%E4%BF%AE%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Mac 上好用的工具软件</title>
    <link href="http://example.com/2020/12/04/Mac-%E4%B8%8A%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/"/>
    <id>http://example.com/2020/12/04/Mac-%E4%B8%8A%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6/</id>
    <published>2020-12-03T17:26:27.000Z</published>
    <updated>2020-12-03T17:46:58.093Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Typora</p><p>官网：<a href="https://typora.io/">https://typora.io/</a></p><p>点评：用过最好用的markdown写作神器，没有之一。</p></li><li><p>Irvue</p><p>官网：AppStore上</p><p>点评：别再为桌面壁纸发愁了，高清免费，每天定时更换桌面，想自己换也可以。</p></li><li><p>Luminar</p><p>官网：<a href="https://www.luminartech.com/">https://www.luminartech.com/</a></p><p>点评：付费软件，高级的修图神器，支持RAW，无损图片质量，简单好用，有14天免费试用</p></li><li><p>DaVinci Resolve</p><p>官网：<a href="http://www.blackmagicdesign.com/products/davinciresolve/">http://www.blackmagicdesign.com/products/davinciresolve/</a></p><p>点评：电影工业唯一使用的后期调色工业软件，有免费版本，已经够使用了</p></li><li><p>Trojan-qt5</p><p>官网：<a href="https://tlanyan.me/trojan-clients-download/">https://tlanyan.me/trojan-clients-download/</a></p><p>点评：翻墙利器，稳定高速，收费，需要找到服务器</p></li><li><p>Charles</p><p>官网：<a href="https://www.charlesproxy.com/">https://www.charlesproxy.com/</a></p><p>点评：网络拦截</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Typora&lt;/p&gt;
&lt;p&gt;官网：&lt;a href=&quot;https://typora.io/&quot;&gt;https://typora.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点评：用过最好用的markdown写作神器，没有之一。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Irvue&lt;/</summary>
      
    
    
    
    
    <category term="Mac 工具" scheme="http://example.com/tags/Mac-%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>IOS ArcGiS 加载天地图</title>
    <link href="http://example.com/2020/12/04/IOS-ArcGiS-%E5%8A%A0%E8%BD%BD%E5%A4%A9%E5%9C%B0%E5%9B%BE/"/>
    <id>http://example.com/2020/12/04/IOS-ArcGiS-%E5%8A%A0%E8%BD%BD%E5%A4%A9%E5%9C%B0%E5%9B%BE/</id>
    <published>2020-12-03T16:27:07.000Z</published>
    <updated>2020-12-03T17:04:41.514Z</updated>
    
    <content type="html"><![CDATA[<h1 id="天地图"><a href="#天地图" class="headerlink" title="天地图"></a>天地图</h1><p>​    一般用惯了百度地图和高德地图的人会问，这是个啥玩意。老实说我也不知道，但是做项目要用，国企项目经常用。这次给中国地震局做了一个活动断层勘察的app就用到了。本来用webview就能解决，但是考虑到勘察人员要去的地方可能没有网络，所以要考虑离线。甲方爸爸指定用天地图，所以用到了ArcGiS加载天地图瓦片来架构。这是个新奇的东西。网上资料寥寥无几，大概在github上找到了两个例子，连接地址放在最后。别现在就去看，给点面子让我教教你行么。</p><p>​    官网：<a href="http://lbs.tianditu.gov.cn/home.html">http://lbs.tianditu.gov.cn/home.html</a></p><h1 id="ArcGIS"><a href="#ArcGIS" class="headerlink" title="ArcGIS"></a>ArcGIS</h1><p>​    这个玩意用来干啥？GIS的意思大概就是跟地图相关，我写这篇文章没打算给你解释清楚是啥，你只要大概知道这是干啥的就达到我写文章的目的了。你见过加班回来还给你写博客教你东西的么，差不多得了。</p><p>​    这个玩意用一句话概括就是地图上能干啥都用它，划线，画点，画面，公交车路线，测量，标记，标注，你能看到在地图上能干的事情，基本都是用它来干的。这个玩意是个开源，被一个叫做esri的组织维护，官网：<a href="https://developers.arcgis.com/">https://developers.arcgis.com/</a></p><p>​    ArcGIS提供了很多平台的SDK支持，IOS、安卓、h5都有，一般IOS获得的方式很简单。就是下面这句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod &#39;ArcGIS-Runtime-SDK-iOS&#39;</span><br></pre></td></tr></table></figure><p>​    文档这里看：<a href="https://developers.arcgis.com/labs/browse/?product=ios&amp;topic=any">https://developers.arcgis.com/labs/browse/?product=ios&amp;topic=any</a></p><p>​    学点英文吧骚年，不然你可能像我一样，只能借助谷歌翻译。</p><p>​    加载地图跟使用苹果自带的MapKit很相似，加载一个地图也容易。但是加载瓦片地图就得大概知道些技术了。瓦片是什么？瓦片，其实就是一小块地图的图片，ArcGIS就像一个引擎一样，去加载很多图片，最后拼凑成一个完整的地图。在天地图里，通过url获得地图瓦片。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/xiaoyeZhang/ArcGisMapTool">https://github.com/xiaoyeZhang/ArcGisMapTool</a></p><p><a href="https://github.com/makeling/CustomTianDiTuLayerV100.0-ObjC">https://github.com/makeling/CustomTianDiTuLayerV100.0-ObjC</a></p><p><a href="https://github.com/crash-wu/SGLocationObjC">https://github.com/crash-wu/SGLocationObjC</a></p><p><a href="https://github.com/crash-wu/SGLocationUtil">https://github.com/crash-wu/SGLocationUtil</a></p><p>聚合的解决方案，案例，房屋中介地图找房</p><p><a href="https://github.com/xjf1990930/ArcGis-iOS-Cluster">https://github.com/xjf1990930/ArcGis-iOS-Cluster</a></p><p><a href="https://blog.csdn.net/weixin_30912051/article/details/94798193">https://blog.csdn.net/weixin_30912051/article/details/94798193</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;天地图&quot;&gt;&lt;a href=&quot;#天地图&quot; class=&quot;headerlink&quot; title=&quot;天地图&quot;&gt;&lt;/a&gt;天地图&lt;/h1&gt;&lt;p&gt;​    一般用惯了百度地图和高德地图的人会问，这是个啥玩意。老实说我也不知道，但是做项目要用，国企项目经常用。这次给中国地震局做了</summary>
      
    
    
    
    
    <category term="ArcGis 天地图" scheme="http://example.com/tags/ArcGis-%E5%A4%A9%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>浅说苹果内购流程</title>
    <link href="http://example.com/2020/12/02/%E6%B5%85%E8%AF%B4%E8%8B%B9%E6%9E%9C%E5%86%85%E8%B4%AD%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2020/12/02/%E6%B5%85%E8%AF%B4%E8%8B%B9%E6%9E%9C%E5%86%85%E8%B4%AD%E6%B5%81%E7%A8%8B/</id>
    <published>2020-12-02T03:21:38.000Z</published>
    <updated>2020-12-03T16:50:29.833Z</updated>
    
    <content type="html"><![CDATA[<h1 id="权威文档"><a href="#权威文档" class="headerlink" title="权威文档"></a>权威文档</h1><p>​    <a href="https://developer.apple.com/cn/in-app-purchase/">App 内购买项目</a></p><h1 id="基本要素"><a href="#基本要素" class="headerlink" title="基本要素"></a>基本要素</h1><p>​    哪些是基本要素呢？比如你得有开发者账号，你得会创建应用，你得先同意appstore后台的付费用户协议，只有这几个都有了你才能进行内购。</p><h1 id="创建内购项目"><a href="#创建内购项目" class="headerlink" title="创建内购项目"></a>创建内购项目</h1><img src="https://img.wenhairu.com/images/2020/12/02/WMxHj.png" style="zoom:50%;" /><p><img src="https://img.wenhairu.com/images/2020/12/02/WP6eg.md.png"></p><p><img src="https://img.wenhairu.com/images/2020/12/02/WPAAK.png"></p><p><img src="https://img.wenhairu.com/images/2020/12/02/WPmG3.md.png"></p><p><img src="https://img.wenhairu.com/images/2020/12/02/WPq4o.md.png"></p><p><img src="https://img.wenhairu.com/images/2020/12/02/WPFhf.md.png"></p><p>​    截图用手机截图。这些资料都填上，不然会报元数据丢失的错。填完点保存就可以了。</p><h1 id="创建sandbox测试账号"><a href="#创建sandbox测试账号" class="headerlink" title="创建sandbox测试账号"></a>创建sandbox测试账号</h1><p>​    在用户和访问-&gt;沙盒测试员里添加测试账号。</p><p>​    <img src="https://img.wenhairu.com/images/2020/12/02/WPYDd.md.png"></p><p><img src="https://img.wenhairu.com/images/2020/12/02/WPfcH.png"></p><p>​    注意：</p><p>​        1、这里的电子邮件必须填写一个新注册的邮箱，不然你就等着采坑吧。点击确认以后，会受到一封同意邀请的邮件，点击里面的同意邀请测试账号就算创建好了。</p><p>​        2、密码你得记好了，以后用来登陆到测试账号的。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>​        支付代码在我的Github有。<a href="https://github.com/reference/QTIAPManager">支付代码</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.jianshu.com/p/72748db72a77">https://www.jianshu.com/p/72748db72a77</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;权威文档&quot;&gt;&lt;a href=&quot;#权威文档&quot; class=&quot;headerlink&quot; title=&quot;权威文档&quot;&gt;&lt;/a&gt;权威文档&lt;/h1&gt;&lt;p&gt;​    &lt;a href=&quot;https://developer.apple.com/cn/in-app-purchase/&quot;</summary>
      
    
    
    
    
    <category term="苹果内购" scheme="http://example.com/tags/%E8%8B%B9%E6%9E%9C%E5%86%85%E8%B4%AD/"/>
    
  </entry>
  
</feed>
